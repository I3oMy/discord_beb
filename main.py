import discord
import json
import os 
import pytz  
import re
import random
import asyncio
import sys
import logging
from discord.app_commands import CheckFailure
from myserver import server_on
from discord.ext import tasks, commands
from discord import app_commands
from discord import ui, Interaction
from datetime import datetime
from discord import ButtonStyle
from cogs.embed_command import EmbedCommand
from cogs.role_reaction import RoleReactionHandler
from discord.ui import Modal, TextInput, Button, View, Select
from discord import TextStyle
from playwright.async_api import async_playwright

CONFIG_FILE = "config.json"

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

intents = discord.Intents.all()
intents.guilds = True
intents.members = True
intents.messages = True
bot = commands.Bot(command_prefix="!", intents=intents)

TARGET_USER_ID = 397002650417233921
last_status = {}

sleep_messages = [
    "‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏Ç‡∏≤‡∏ô‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏£‡∏±‡∏ö üò¥",
    "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ù‡∏±‡∏ô‡∏´‡∏ß‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏•‡∏¢~ üåô",
    "‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏£‡∏±‡∏ö ‡∏≠‡∏¢‡πà‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏Å‡∏ß‡∏ô~ üòå"
]

busy_messages = [
    "‡∏ß‡πà‡∏≤‡πÑ‡∏á‡∏™‡∏∏‡∏î‡∏´‡∏•‡πà‡∏≠ ‡∏£‡∏≠‡πÅ‡∏õ‡πä‡∏ö‡∏ô‡∏∞ üçµ",
    "‡πÄ‡∏Ç‡∏≤‡∏ï‡∏¥‡∏î‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏≠‡∏¢‡∏π‡πà ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ï‡∏≠‡∏ö‡∏ô‡∏∞~ üíº",
    "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á‡∏Ñ‡∏∏‡∏¢‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà üïí"
]




@bot.command()
@commands.is_owner()
async def restart(ctx):
    await ctx.send("‚ôªÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏ö‡∏≠‡∏ó...")
    try:
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ sys.executable ‡πÅ‡∏•‡∏∞ sys.argv
        if sys.executable and sys.argv:
            os.execv(sys.executable, ['python'] + sys.argv)
        else:
            await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏î‡πâ: ‡∏Ç‡∏≤‡∏î sys.executable ‡∏´‡∏£‡∏∑‡∏≠ sys.argv")
    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó: {e}")
        print(f"Error during restart: {e}")

@bot.command()
@commands.is_owner()
async def clearslash(ctx):
    """
    ‡∏•‡∏ö Global Slash Commands ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÅ‡∏•‡∏∞ Sync ‡πÉ‡∏´‡∏°‡πà
    """
    try:
        print("üîÑ Attempting to clear global commands...")

        # ‡∏î‡∏∂‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Global ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Discord
        global_commands = await bot.tree.fetch_commands()
        print(f"‚úÖ Fetched {len(global_commands)} global commands.")

        # ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Global ‡∏ó‡∏µ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ú‡πà‡∏≤‡∏ô HTTP API
        app_id = bot.user.id
        for command in global_commands:
            await bot.http.delete_global_command(app_id, command.id)
            print(f"üóëÔ∏è Deleted global command: {command.name}")

        # Sync ‡πÉ‡∏´‡∏°‡πà (‡∏à‡∏∞‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏•‡∏ö‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß)
        synced = await bot.tree.sync()
        print(f"‚úÖ Commands synced successfully. Synced {len(synced)} commands.")
        await ctx.send("‚úÖ ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Global ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡∏∞ Sync ‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡πâ‡∏ß!")
    except Exception as e:
        error_message = f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: {e}"
        print(error_message)
        await ctx.send(error_message)



@bot.command()
async def send_image(ctx):
    # ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö
    if ctx.message.attachments:
        for attachment in ctx.message.attachments:
            if attachment.filename.endswith(('png', 'jpg', 'jpeg', 'gif')):
                # ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô Embed
                embed = discord.Embed(
                    title="‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á!",
                    description=f"‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å {ctx.author.mention}",
                    color=discord.Color.green()
                )
                embed.set_image(url=attachment.url)
                await ctx.send(embed=embed)        


def is_valid_url(url: str) -> bool:
    return re.match(r'^https?://', url) is not None

def is_moderator_or_admin_slash(interaction: discord.Interaction) -> bool:
    if interaction.guild is None:
        return False
    perms = interaction.user.guild_permissions
    return perms.manage_guild or perms.administrator

# ‚úÖ Group error handler
async def handle_check_failure(interaction: discord.Interaction, error):
    if isinstance(error, app_commands.CheckFailure):
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
    else:
        await interaction.response.send_message(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {error}", ephemeral=True)



def has_any_role_name(role_names: list[str]):
    role_names_lower = [name.lower() for name in role_names]
    
    def predicate(interaction: discord.Interaction) -> bool:
        if interaction.user.id == interaction.guild.owner_id:
            return True
        if not hasattr(interaction.user, "roles"):
            return False
        return any(role.name.lower() in role_names_lower for role in interaction.user.roles)

    return app_commands.check(predicate)




async def check_admin_permission(interaction):
    print(f"User {interaction.user} permissions: {interaction.user.guild_permissions}")
    return interaction.user.guild_permissions.administrator




class WelcomeModal(discord.ui.Modal):
    def __init__(self, title_val="", description_val="", image_val="", color_val=""):
        super().__init__(title="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö")

        self.title_input = discord.ui.TextInput(
            label="‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ Embed (Title)",
            placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö {user}!",
            default=title_val,
            max_length=100,
            required=False
        )
        self.description_input = discord.ui.TextInput(
            label="‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ Embed",
            placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡∏é‡πÉ‡∏ô <#1234567890>",
            default=description_val,
            style=discord.TextStyle.paragraph,
            max_length=1000,
            required=False
        )
        self.image_input = discord.ui.TextInput(
            label="‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)",
            placeholder="https://...",
            default=image_val,
            required=False
        )
        self.color_input = discord.ui.TextInput(
            label="‡∏™‡∏µ Embed (‡πÄ‡∏ä‡πà‡∏ô #3498db)",
            placeholder="#3498db",
            default=color_val,
            required=False,
            max_length=7
        )

        self.add_item(self.title_input)
        self.add_item(self.description_input)
        self.add_item(self.image_input)
        self.add_item(self.color_input)

    async def on_submit(self, interaction: discord.Interaction):
        config = load_config()
        guild_id = str(interaction.guild.id)
        data = config.get(guild_id, {})

        # ‡πÉ‡∏ä‡πâ key ‡πÅ‡∏¢‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö welcome
        title = self.title_input.value or data.get("embedwelcome_title", "üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö!")
        desc = self.description_input.value or data.get("message", "‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà!")
        image = self.image_input.value or data.get("image_url", "")
        color = self.color_input.value or data.get("color", "#5865F2")

        try:
            embed_color = int(color.replace("#", ""), 16)
        except ValueError:
            await interaction.response.send_message("‚ùå Invalid color code. Please use a valid hex value (e.g., #3498db).", ephemeral=True)
            return

        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏â‡∏û‡∏≤‡∏∞
        data["embedwelcome_title"] = title
        data["embedwelcome_message"] = desc
        data["embedwelcome_image_url"] = image
        data["embedwelcome_color"] = color
        data["embedwelcome_enabled"] = True

        config[guild_id] = data
        save_config(config)

        embed = discord.Embed(
            title=title.replace("{user}", interaction.user.mention),
            description=desc.replace("{user}", interaction.user.mention),
            color=embed_color
        )
        if image:
            embed.set_image(url=image)
        embed.set_footer(text=f"‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡∏°‡∏µ {interaction.guild.member_count} ‡∏Ñ‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå üí¨")

        await interaction.response.send_message(
            content=f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß!",
            embed=embed,
            ephemeral=True
        )


class WelcomeView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=60)  # ‚ùó ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ñ‡∏≤‡∏ß‡∏£

    @discord.ui.button(label="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö", style=discord.ButtonStyle.primary, custom_id="open_welcome_modal")
    async def open_modal(self, interaction: discord.Interaction, button: discord.ui.Button):
        config = load_config().get(str(interaction.guild.id), {})
        await interaction.response.send_modal(WelcomeModal(
            title_val=config.get("title", ""),
            description_val=config.get("message", ""),
            image_val=config.get("image_url", ""),
            color_val=config.get("color", "")
        ))



class GoodbyeModal(discord.ui.Modal):
    def __init__(self, title_val="", description_val="", image_val="", color_val=""):
        super().__init__(title="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå")

        self.title_input = discord.ui.TextInput(
            label="‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ Embed (Title)",
            placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô {user}...",
            default=title_val,
            max_length=100,
            required=False
        )
        self.description_input = discord.ui.TextInput(
            label="‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ Embed (Description)",
            placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏û‡∏ö‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà!",
            default=description_val,
            style=discord.TextStyle.paragraph,
            max_length=1000,
            required=False
        )
        self.image_input = discord.ui.TextInput(
            label="‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)",
            placeholder="https://...",
            default=image_val,
            required=False
        )
        self.color_input = discord.ui.TextInput(
            label="‡∏™‡∏µ Embed (Hex ‡πÄ‡∏ä‡πà‡∏ô #e74c3c ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏ß‡πâ)",
            placeholder="#e74c3c",
            default=color_val,
            required=False,
            max_length=7
        )

        self.add_item(self.title_input)
        self.add_item(self.description_input)
        self.add_item(self.image_input)
        self.add_item(self.color_input)

    async def on_submit(self, interaction: discord.Interaction):
        config = load_config()
        guild_id = str(interaction.guild.id)
        data = config.get(guild_id, {})

        title = self.title_input.value or data.get("goodbye_title", "üëã ‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô!")
        message = self.description_input.value or data.get("goodbye_message", "{user} ‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå")
        image_url = self.image_input.value or data.get("goodbye_image_url", "")
        color_input = self.color_input.value or data.get("goodbye_color", "#e74c3c")  # ‡πÅ‡∏î‡∏á default

        try:
            # ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ color_input ‡πÅ‡∏ó‡∏ô color
            embed_color = int(color_input.replace("#", ""), 16)
        except ValueError:
            embed_color = 0x5865F2  # Default color (e.g., Discord's blurple)

        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÑ‡∏ß‡πâ‡πÉ‡∏ô config
        data["goodbye_title"] = title
        data["goodbye_message"] = message
        data["goodbye_image_url"] = image_url
        data["goodbye_color"] = color_input
        data["enabled"] = True

        config[guild_id] = data
        save_config(config)

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed
        embed = discord.Embed(
            title=title.replace("{user}", interaction.user.mention),
            description=message.replace("{user}", interaction.user.mention),
            color=embed_color
        )
        if image_url:
            embed.set_image(url=image_url)
        embed.set_footer(text=f"‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å {interaction.guild.member_count} ‡∏Ñ‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå üò¢")

        await interaction.response.send_message(
            content=f"üëã ‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô {interaction.user.mention} (‡πÅ‡∏Ñ‡πà‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ô‡∏∞!)",
            embed=embed,
            ephemeral=True
        )

@bot.event
async def on_raw_reaction_add(payload):
    if payload.guild_id is None:
        return

    config = load_config()
    guild_id = str(payload.guild_id)
    guild_config = config.get(guild_id, {})

    if payload.message_id != guild_config.get("message_id"):
        return

    emoji = str(payload.emoji)

    if emoji in guild_config:
        role_id = guild_config[emoji].get("role_id")
        if not role_id:
            return

        guild = bot.get_guild(payload.guild_id)
        member = guild.get_member(payload.user_id)
        role = guild.get_role(role_id)

        if role and member:
            try:
                await member.add_roles(role)
                print(f"‚úÖ Gave role {role.name} to {member.display_name}")
            except discord.Forbidden:
                print(f"‚ùå Missing permission to add role {role.name} to {member.display_name}")
            except Exception as e:
                print(f"‚ùå Error: {e}")

@bot.event
async def on_raw_reaction_remove(payload):
    if payload.guild_id is None:
        return

    config = load_config()
    guild_id = str(payload.guild_id)
    guild_config = config.get(guild_id, {})

    if payload.message_id != guild_config.get("message_id"):
        return

    emoji = str(payload.emoji)

    if emoji in guild_config:
        role_id = guild_config[emoji].get("role_id")
        if not role_id:
            return

        guild = bot.get_guild(payload.guild_id)
        member = guild.get_member(payload.user_id)
        role = guild.get_role(role_id)

        if role and member:
            try:
                await member.remove_roles(role)
                print(f"üîÅ Removed role {role.name} from {member.display_name}")
            except Exception as e:
                print(f"‚ùå Error removing role: {e}")


@bot.event
async def on_reaction_add(reaction: discord.Reaction, user: discord.User):
    if user.bot:  # ‡∏Ç‡πâ‡∏≤‡∏°‡∏ö‡∏≠‡∏ó
        return

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ reaction ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô embed ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if not isinstance(reaction.message.embeds, list) or len(reaction.message.embeds) == 0:
        return

    embed = reaction.message.embeds[0]
    if "select your role" not in embed.title:  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ö‡∏¢‡∏®‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        return

    # ‡∏´‡∏≤ role ‡∏ï‡∏≤‡∏°‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥
    emoji = reaction.emoji
    guild_config = load_config().get(str(reaction.message.guild.id))
    if not guild_config:
        return

    for role_id, data in guild_config.items():
        if isinstance(data, dict) and "emoji" in data and data["emoji"] == emoji:
            role = reaction.message.guild.get_role(int(role_id))
            if not role:  # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏´‡∏≤ role
                return

            member = reaction.message.guild.get_member(user.id)
            if not member:  # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏´‡∏≤ member
                return

            if role not in member.roles:  # ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
                try:
                    await member.add_roles(role)  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
                    await reaction.message.channel.send(f"‚úÖ {user.name} ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó {role.name} ‡πÅ‡∏•‡πâ‡∏ß")
                except discord.Forbidden:
                    await reaction.message.channel.send(f"‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÉ‡∏´‡πâ {user.name} ‡πÑ‡∏î‡πâ")
            else:  # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÅ‡∏•‡πâ‡∏ß
                try:
                    await member.remove_roles(role)  # ‡∏•‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
                    await reaction.message.channel.send(f"‚ùå {user.name} ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó {role.name} ‡πÅ‡∏•‡πâ‡∏ß")
                except discord.Forbidden:
                    await reaction.message.channel.send(f"‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÉ‡∏´‡πâ {user.name} ‡πÑ‡∏î‡πâ")
            break





@bot.tree.command(name="setrole", description="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏î‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó")
@has_any_role_name(["Admin", "Moderator", "‡∏Ñ‡∏ô‡∏î‡∏π‡πÅ‡∏•"])
@app_commands.describe(channel="‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏î‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó (‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡πâ‡∏≠‡∏á)")
async def setrole(interaction: discord.Interaction, channel: discord.TextChannel = None):
    config = load_config()
    guild_id = str(interaction.guild.id)
    guild_config = config.get(guild_id)

    if not guild_config:
        await interaction.response.send_message("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    if not any(isinstance(v, dict) and "role_id" in v for v in guild_config.values()):
        await interaction.response.send_message("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÉ‡∏î‡πÜ", ephemeral=True)
        return

    if "channel_id" not in guild_config and not channel:
        await interaction.response.send_message("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á", ephemeral=True)
        return

    if channel:
        guild_config["channel_id"] = channel.id
        config[guild_id] = guild_config
        save_config(config)

    title = guild_config.get("embedrole_title", "‚ú¶ select your role ‚ú¶")
    color_hex = guild_config.get("embedrole_color", "#2ecc71")
    try:
        color = int(color_hex.replace("#", ""), 16)
    except ValueError:
        color = 0x2ecc71

    description_lines = ["¬∞‚ùÄ‚ãÜ.‡≥É‡øî*:ÔΩ•¬∞‚ùÄ‚ãÜ.‡≥É‡øî*:ÔΩ•¬∞‚ùÄ‚ãÜ.‡≥É‡øî:ÔΩ•¬∞‚ùÄ‚ãÜ.‡≥É‡øî:ÔΩ•"]
    for emoji, data in guild_config.items():
        if isinstance(data, dict) and "role_id" in data:
            role_id = data["role_id"]
            description = data.get("description", "")
            role = interaction.guild.get_role(role_id)

            if role:
                description_lines.append(f"{emoji} = {role.mention}` {description} ‚ãÜÔΩ°¬∞‚ú©")

    description_lines.append("¬∞‚ùÄ‚ãÜ.‡≥É‡øî*:ÔΩ•¬∞‚ùÄ‚ãÜ.‡≥É‡øî*:ÔΩ•¬∞‚ùÄ‚ãÜ.‡≥É‡øî:ÔΩ•¬∞‚ùÄ‚ãÜ.‡≥É‡øî:ÔΩ•")

    embed = discord.Embed(
        title=title,
        description="\n".join(description_lines),
        color=color
    )
    embed.set_image(url=guild_config.get("image_url", "https://media.tenor.com/J_BBejDgP1kAAAAC/ai-eyes.gif"))
    embed.set_footer(text=f"‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ {interaction.user.display_name}", icon_url=interaction.user.avatar.url)

    target_channel_id = guild_config.get("channel_id")
    target_channel = interaction.guild.get_channel(target_channel_id)

    if target_channel:
        message = await target_channel.send(embed=embed)

        for emoji, data in guild_config.items():
            if isinstance(data, dict) and "role_id" in data:
                try:
                    await message.add_reaction(emoji)
                except discord.HTTPException:
                    pass

        guild_config["message_id"] = message.id
        config[guild_id] = guild_config
        save_config(config)

        await interaction.response.send_message(f"‚úÖ ‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏ó‡∏µ‡πà {target_channel.mention} ‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ", ephemeral=True)


@bot.tree.command(name="resetrole", description="‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ")
async def resetrole(interaction: discord.Interaction):
    config = load_config()
    guild_id = str(interaction.guild.id)
    guild_config = config.get(guild_id)

    if not guild_config:
        await interaction.response.send_message("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    message_id = guild_config.get("message_id")
    channel_id = guild_config.get("channel_id")
    if message_id and channel_id:
        target_channel = interaction.guild.get_channel(channel_id)
        if target_channel:
            try:
                message = await target_channel.fetch_message(message_id)
                await message.delete()
            except discord.NotFound:
                pass

    # ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ key ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô role_id (int string) ‡∏ó‡∏µ‡πà‡∏°‡∏µ dict ‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô
    keys_to_delete = [k for k, v in guild_config.items() if isinstance(v, dict) and "emoji" in v]
    for k in keys_to_delete:
        del guild_config[k]

    # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï message_id
    guild_config["message_id"] = None
    config[guild_id] = guild_config
    save_config(config)

    await interaction.response.send_message("‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)





# ‡πÉ‡∏ä‡πâ Modal ‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á embedrole
@bot.tree.command(name="embedrole", description="‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ Embed ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏±‡∏ö‡∏¢‡∏®")
@has_any_role_name(["‡∏Ñ‡∏ô‡∏î‡∏π‡πÅ‡∏•", "Moderator", "Admin"])
async def embedrole(interaction: discord.Interaction):
    modal = EmbedRoleModal()
    await interaction.response.send_modal(modal)



# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /editrole
@bot.tree.command(name="editrole", description="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏î‡∏£‡∏±‡∏ö‡∏¢‡∏®")
@has_any_role_name(["Admin", "Moderator", "‡∏Ñ‡∏ô‡∏î‡∏π‡πÅ‡∏•"])
async def editrole(interaction: discord.Interaction, emoji: str, role: discord.Role, description: str = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢"):
    """
    ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• emoji + ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏î‡∏£‡∏±‡∏ö‡∏¢‡∏®
    """
    config = load_config()
    guild_id = str(interaction.guild.id)
    guild_config = config.get(guild_id, {})

    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ emoji ‡πÄ‡∏õ‡πá‡∏ô key
    guild_config[emoji] = {
        "role_id": role.id,
        "description": description
    }

    config[guild_id] = guild_config
    save_config(config)

    await interaction.response.send_message(
        f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n"
        f"Emoji: {emoji}\n"
        f"Role: {role.mention}\n"
        f"‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢: {description}",
        ephemeral=True
    )

class EmbedRoleModal(Modal):
    def __init__(self):
        super().__init__(title="‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏±‡∏ö‡∏¢‡∏®")
        self.title_input = TextInput(
            label="‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ Embed",
            placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
            min_length=1,
            max_length=256,
            required=True
        )
        self.add_item(self.title_input)

    async def on_submit(self, interaction: discord.Interaction):
        title = self.title_input.value
        config = load_config()
        guild_id = str(interaction.guild.id)

        # ‚úÖ ‡πÉ‡∏ä‡πâ key ‡πÅ‡∏¢‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡∏≠‡∏á embedrole
        if guild_id not in config:
            config[guild_id] = {}

        config[guild_id]["embedrole_title"] = title
        save_config(config)

        await interaction.response.send_message(f"‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ EmbedRole ‡πÄ‡∏õ‡πá‡∏ô `{title}` ‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)


class EditRoleModal(discord.ui.Modal, title="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó"):
    def __init__(self, emoji, role_name, role_id):
        super().__init__()
        self.emoji = emoji
        self.role_id = role_id
        self.role_name = role_name

        self.add_item(discord.ui.TextInput(
            label="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó",
            placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ô‡∏µ‡πâ...",
            default=f"‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó: {role_name}",
            style=discord.TextStyle.paragraph,
            max_length=200,
            required=True
        ))

    async def on_submit(self, interaction: discord.Interaction):
        description = self.children[0].value
        await interaction.response.send_message(
            f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó **{self.role_name}** (ID: `{self.role_id}`) ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà:\n{description}",
            ephemeral=True
        )

class Sync(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="sync", description="‡∏ã‡∏¥‡∏á‡∏Å‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Slash ‡∏Å‡∏±‡∏ö Discord (global)")
    @app_commands.checks.has_permissions(manage_guild=True)
    async def sync(self, interaction: discord.Interaction):
        # ‡∏ã‡∏¥‡∏á‡∏Å‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏ö‡∏ö global
        await self.bot.tree.sync(guild=None)  # ‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏ guild ‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ã‡∏¥‡∏á‡∏Å‡πå‡πÅ‡∏ö‡∏ö global
        await interaction.response.send_message("‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Slash ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ã‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏±‡πà‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏ö‡∏≠‡∏ó‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)

    @sync.error
    async def sync_error(self, interaction: discord.Interaction, error):
        if isinstance(error, app_commands.MissingPermissions):
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏ã‡∏¥‡∏á‡∏Å‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á", ephemeral=True)


@bot.tree.command(name="embed", description="‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Embed ‡∏ó‡∏µ‡πà‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°")
@app_commands.describe(
    title="‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ç‡∏≠‡∏á Embed",
    description="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á Embed",
    color="‡∏™‡∏µ‡∏Ç‡∏≠‡∏á Embed (‡πÉ‡∏ä‡πâ Hex ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏µ)"
)
async def embed(interaction: discord.Interaction, title: str, description: str, color: str = "#3498db"):
    try:
        embed_color = int(color.lstrip("#"), 16)
        embed = discord.Embed(title=title, description=description, color=embed_color)
        embed.set_footer(text=f"‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ {interaction.user}", icon_url=interaction.user.avatar.url)
        await interaction.response.send_message(embed=embed)
    except ValueError:
        await interaction.response.send_message(
            "‚ùå ‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏™‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ Hex (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: #3498db) ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
            ephemeral=True
        )



def load_config():
    try:
        with open(CONFIG_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        print("Config file not found. Creating a new one.")
        return {}
    except json.JSONDecodeError:
        print("Config file is corrupted. Starting with an empty config.")
        return {}

def save_config(config):
    try:
        with open(CONFIG_FILE, "w", encoding="utf-8") as f:
            json.dump(config, f, indent=4)
    except IOError as e:
        print(f"Error saving config: {e}")

def create_embed(role_items, guild):
    """
    ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
    """
    embed = discord.Embed(
        title="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
        description="‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó",
        color=discord.Color.green()
    )
    for item in role_items:
        role = guild.get_role(item["role_id"])
        if role:
            embed.add_field(
                name=f"{item['emoji']} {role.name}",
                value=item['description'],
                inline=False
            )
    return embed

async def add_reactions(message, role_items):
    """
    ‡πÄ‡∏û‡∏¥‡πà‡∏° Reaction ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á
    """
    for item in role_items:
        try:
            await message.add_reaction(item["emoji"])
        except discord.HTTPException as e:
            logging.warning(f"‚ùå Failed to add reaction {item['emoji']} to message {message.id}: {e}")



@commands.command(name="create_roles_message")
@commands.has_permissions(manage_roles=True)
async def create_roles_message(ctx):
    """
    ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Embed ‡∏û‡∏£‡πâ‡∏≠‡∏° Role Reaction ‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÄ‡∏≠‡∏á
    """
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed
    embed = discord.Embed(
        title="‚òÖ Select Your Role ‚òÖ",
        description="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Emoji ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
        color=discord.Color.blue()
    )
    embed.set_footer(text="‚òÖ Select Your Role ‚òÖ")

    # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á
    emoji_role_map = {
        "üå∏": "ruby",
        "üíé": "sapphire",
        "üü®": "topaz",
        "üíö": "emerald",
        "üî∑": "diamond",
        "üíú": "amethyst",
        "üåà": "opal"
    }

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ Emoji ‡∏ã‡πâ‡∏≥
    if len(emoji_role_map.keys()) != len(set(emoji_role_map.keys())):
        await ctx.send("‚ùå ‡∏°‡∏µ‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏ã‡πâ‡∏≥‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç")
        return

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Embed
    for emoji, role_name in emoji_role_map.items():
        embed.add_field(name=f"{emoji} {role_name}", value=f"‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó **{role_name}**", inline=False)

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
    if not ctx.channel.permissions_for(ctx.guild.me).send_messages:
        await ctx.send("‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ")
        return

    if not ctx.channel.permissions_for(ctx.guild.me).add_reactions:
        await ctx.send("‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏û‡∏¥‡πà‡∏° Reaction ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ")
        return

    # ‡∏™‡πà‡∏á Embed
    message = await ctx.send(embed=embed)

    # ‡πÄ‡∏û‡∏¥‡πà‡∏° Reaction ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    for emoji in emoji_role_map.keys():
        try:
            await message.add_reaction(emoji)
        except discord.HTTPException as e:
            logging.warning(f"‚ùå Failed to add reaction {emoji}: {e}")

    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Emoji ‡πÅ‡∏•‡∏∞ Role ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå
    try:
        with open("reaction_roles.json", "w", encoding="utf-8") as file:
            import json
            data = {
                "message_id": message.id,
                "channel_id": message.channel.id,
                "emoji_role_map": emoji_role_map
            }
            json.dump(data, file, ensure_ascii=False, indent=4)
    except IOError as e:
        await ctx.send(f"‚ùå Failed to save reaction roles: {e}")
        return

    await ctx.send("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Role Reaction ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")


@bot.event
async def on_application_command_error(interaction, error):
    print(f"Command error: {error}")
    if isinstance(error, app_commands.CheckFailure):
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
    else:
        await interaction.response.send_message("‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á", ephemeral=True)  

@bot.event
async def on_interaction(interaction: discord.Interaction):
    if interaction.type == discord.InteractionType.component:
        # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Select
        if isinstance(interaction.data, dict):
            if interaction.data.get("custom_id") == "editrole":
                emoji = interaction.data["values"][0]
                role_id = int(interaction.data["values"][1])
                role_name = discord.utils.get(interaction.guild.roles, id=role_id).name

                # ‡πÄ‡∏õ‡∏¥‡∏î modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
                modal = EditRoleModal(emoji, role_name, role_id)
                await interaction.response.send_modal(modal)


@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user}")
    try:
        # ‡∏ã‡∏¥‡∏á‡∏Å‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Slash
        synced_commands = await bot.tree.sync()
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏° Cog ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ã‡∏¥‡∏á‡∏Å‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à
        await bot.add_cog(Sync(bot))  # ‡πÄ‡∏û‡∏¥‡πà‡∏° Cog ‡∏ô‡∏µ‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
        
        print(f"‚úÖ Synced {len(synced_commands)} commands.")
    except discord.Forbidden:
        logging.error("‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå Sync ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ö‡∏≤‡∏á‡πÅ‡∏´‡πà‡∏á")
    except Exception as e:
        logging.error(f"‚ùå Failed to sync commands: {e}")


@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        await ctx.send(
            embed=discord.Embed(
                title="‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå",
                description="‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ",
                color=discord.Color.red()
            )
        )
    elif isinstance(error, commands.CommandNotFound):
        await ctx.send(
            embed=discord.Embed(
                title="‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
                description="‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
                color=discord.Color.red()
            )
        )
    elif isinstance(error, commands.MissingRequiredArgument):
        await ctx.send(
            embed=discord.Embed(
                title="‚ö†Ô∏è ‡∏Ç‡∏≤‡∏î‡∏≠‡∏≤‡∏£‡πå‡∏Å‡∏¥‡∏ß‡πÄ‡∏°‡∏ô‡∏ï‡πå",
                description="‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô ‡πÄ‡∏ä‡πà‡∏ô `/‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <‡∏≠‡∏≤‡∏£‡πå‡∏Å‡∏¥‡∏ß‡πÄ‡∏°‡∏ô‡∏ï‡πå>`",
                color=discord.Color.orange()
            )
        )
    else:
        await ctx.send(
            embed=discord.Embed(
                title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description=f"‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: `{error}`",
                color=discord.Color.red()
            )
        )

@bot.event
async def on_member_join(member):
    # ‡πÉ‡∏ä‡πâ config.json ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡πà‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ
    config = load_config()
    data = config.get(str(member.guild.id))

    if not data or not data.get("enabled", True):
        return

    channel = discord.utils.get(member.guild.text_channels, name="welcome")  # ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏™‡πà ID ‡πÅ‡∏ó‡∏ô
    if not channel:
        return

    text = data["message"].replace("{user}", member.mention)

    embed = discord.Embed(
        title="üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö!",
        description=text,
        color=discord.Color.purple()
    )
    embed.set_thumbnail(url=member.display_avatar.url)

    if data.get("image_url"):
        embed.set_image(url=data["image_url"])

    thailand_tz = pytz.timezone('Asia/Bangkok')
    current_time = datetime.now(thailand_tz).strftime('%H:%M:%S %Y-%m-%d')

    # üßæ ‡πÉ‡∏™‡πà footer ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ + ‡πÄ‡∏ß‡∏•‡∏≤ + ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
    embed.set_footer(text=f"‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà: {member.name} | ‡πÄ‡∏ß‡∏•‡∏≤: {current_time} | ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {member.guild.member_count} ‡∏Ñ‡∏ô")

    # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å embed
    await channel.send(
        content=f"üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö {member.mention}!",
        embed=embed
    )



@bot.event
async def on_message(message):
    if message.author == bot.user:
        return

    content = message.content.lower()

    if "‡∏Å‡∏¥‡∏ô‡πÑ‡∏£‡∏î‡∏µ" in content or "‡∏Å‡∏¥‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡∏µ" in content:
        menu_list = [
            "‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏£‡∏∞‡πÄ‡∏û‡∏£‡∏≤", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏°‡∏±‡∏ô‡πÑ‡∏Å‡πà", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏°‡∏π‡πÅ‡∏î‡∏á", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏°‡∏π‡∏Å‡∏£‡∏≠‡∏ö",
            "‡∏Å‡πã‡∏ß‡∏¢‡πÄ‡∏ï‡∏µ‡πã‡∏¢‡∏ß‡πÄ‡∏£‡∏∑‡∏≠", "‡∏Å‡πã‡∏ß‡∏¢‡πÄ‡∏ï‡∏µ‡πã‡∏¢‡∏ß‡∏ï‡πâ‡∏°‡∏¢‡∏≥", "‡πÄ‡∏¢‡πá‡∏ô‡∏ï‡∏≤‡πÇ‡∏ü", "‡∏£‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤", "‡∏ú‡∏±‡∏î‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß",
            "‡∏ú‡∏±‡∏î‡πÑ‡∏ó‡∏¢", "‡∏Ç‡πâ‡∏≤‡∏ß‡πÑ‡∏Ç‡πà‡πÄ‡∏à‡∏µ‡∏¢‡∏ß", "‡∏Ç‡πâ‡∏≤‡∏ß‡πÑ‡∏Ç‡πà‡∏Ç‡πâ‡∏ô", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏°‡∏π‡∏ó‡∏≠‡∏î", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ô‡∏∑‡πâ‡∏≠",
            "‡∏´‡∏°‡∏π‡∏Å‡∏£‡∏∞‡∏ó‡∏∞", "‡∏ä‡∏≤‡∏ö‡∏π", "‡∏õ‡∏¥‡πâ‡∏á‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ", "‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤", "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå",
            "‡∏™‡∏õ‡∏≤‡πÄ‡∏Å‡πá‡∏ï‡∏ï‡∏µ‡πâ", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏ã‡∏≠‡∏¢", "‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô", "‡πÅ‡∏Å‡∏á‡∏™‡πâ‡∏°", "‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á",
            "‡∏ï‡πâ‡∏°‡∏à‡∏∑‡∏î‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏Ñ‡∏•‡∏∏‡∏Å‡∏Å‡∏∞‡∏õ‡∏¥", "‡∏™‡πâ‡∏°‡∏ï‡∏≥", "‡πÑ‡∏Å‡πà‡∏ó‡∏≠‡∏î", "‡∏Ç‡πâ‡∏≤‡∏ß‡πÄ‡∏´‡∏ô‡∏µ‡∏¢‡∏ß‡∏´‡∏°‡∏π‡∏õ‡∏¥‡πâ‡∏á"
        ]

        emoji_list = ["üçõ", "üçú", "üç≤", "ü•ò", "üçù", "üçï", "üçî", "üåÆ", "ü•ó", "üç§", "ü•ì", "üçó", "üçö", "üç±", "ü•ü"]

        menu = random.choice(menu_list)
        emoji = random.choice(emoji_list)

        await message.channel.send(f"‡∏•‡∏≠‡∏á‡∏Å‡∏¥‡∏ô **{menu}** ‡∏î‡∏π‡πÑ‡∏´‡∏°? {emoji}")

    if any(user.id == TARGET_USER_ID for user in message.mentions):
        thailand_tz = pytz.timezone('Asia/Bangkok')
        now = datetime.now(thailand_tz)
        hour = now.hour

        if 2 <= hour < 14:
            response = random.choice(sleep_messages)
        else:  # 14:00 - 01:59
            response = random.choice(busy_messages)
            
        await message.channel.send(response)
    
    await bot.process_commands(message)


@bot.tree.command(name="example", description="‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á")
async def example(interaction: discord.Interaction):
    try:
        # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
        raise ValueError("‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î")
    except ValueError as e:
        await interaction.response.send_message(
            embed=discord.Embed(
                title="‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description=f"‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤: `{e}`",
                color=discord.Color.red()
            ),
            ephemeral=True
        )
    except Exception as e:
        # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
        await interaction.response.send_message(
            embed=discord.Embed(
                title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏",
                description=f"‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: `{e}`",
                color=discord.Color.red()
            ),
            ephemeral=True
        )


def get_guild_data(guild_id):
    config = load_config()
    return config.get(str(guild_id), {})

def set_channel(guild_id, channel_id):
    config = load_config()
    config[str(guild_id)] = config.get(str(guild_id), {})
    config[str(guild_id)]["channel_id"] = channel_id
    save_config(config)

def add_tiktok(guild_id, username):
    config = load_config()
    guild_data = config.setdefault(str(guild_id), {})
    users = guild_data.setdefault("tiktok_usernames", [])
    if username not in users:
        users.append(username)
    save_config(config)

def remove_tiktok(guild_id, username):
    config = load_config()
    users = config.get(str(guild_id), {}).get("tiktok_usernames", [])
    if username in users:
        users.remove(username)
    save_config(config)

# ---------- TikTok Live Checker ---------- #
async def is_live(username):
    try:
        async with async_playwright() as p:
            browser = await p.chromium.launch(headless=True)
            page = await browser.new_page()

            try:
                await page.goto(f"https://www.tiktok.com/@{username}/live", timeout=15000)
                html = await page.content()
            except Exception as e:
                print(f"[ERROR] ‡πÇ‡∏´‡∏•‡∏î TikTok ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")
                return False, None, None, None
            finally:
                await browser.close()

            # ‡∏£‡∏π‡∏õ‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
            match_img = re.search(r'<meta property="og:image" content="(.*?)"', html)
            image = match_img.group(1) if match_img else None

            # ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÑ‡∏•‡∏ü‡πå
            match_title = re.search(r'<meta property="og:title" content="(.*?)"', html)
            title = match_title.group(1) if match_title else "Live on TikTok"

            # ‡∏Ñ‡∏ô‡∏î‡∏π
            match_viewers = re.search(r'{"viewerCount":(\d+)', html)
            viewers = int(match_viewers.group(1)) if match_viewers else 0

            # ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏•‡∏ü‡πå‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏°
            live = "LIVE" in html or "liveRoom" in html
            return live, image, title, viewers
    except Exception as e:
        print(f"[CRITICAL] ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô is_live(): {e}")
        return False, None, None, None




class WatchButton(View):
    def __init__(self, url): super().__init__(); self.add_item(Button(label="Watch Stream", url=url))

async def send_embed(channel, username, preview, stream_title, viewers):
    url = f"https://www.tiktok.com/@{username}/live"
    embed = discord.Embed(title=f"{username} ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏•‡∏ü‡πå!", description=stream_title or "üé• ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏î‡∏π‡πÄ‡∏•‡∏¢!", color=0xff0050)
    embed.set_author(name=username, icon_url="https://www.tiktok.com/favicon.ico")
    if preview:
        embed.set_image(url=preview)
    if viewers is not None:
        embed.add_field(name="üëÅÔ∏è Viewers", value=str(viewers), inline=True)
    embed.add_field(name="üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå TikTok", value=f"[‡∏ä‡∏°‡∏™‡∏ï‡∏£‡∏µ‡∏°]({url})", inline=True)
    await channel.send(content="@everyone", embed=embed, view=WatchButton(url))




# ---------- Loop ---------- #
@tasks.loop(minutes=1)
async def check_tiktoks():
    config = load_config()
    for guild_id, data in config.items():
        guild_id = int(guild_id)
        channel = bot.get_channel(data.get("channel_id"))
        if not channel:
            continue

        usernames = data.get("tiktok_usernames", [])
        for username in usernames:
            is_on, preview, title, viewers = await is_live(username)
            if last_status.get(guild_id, {}).get(username) != is_on:
                last_status.setdefault(guild_id, {})[username] = is_on
                if is_on:
                    await send_embed(channel, username, preview, title, viewers)


# ---------- Slash Commands ---------- #
@bot.tree.command(name="setchannel", description="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡πÅ‡∏à‡πâ‡∏á‡πÑ‡∏•‡∏ü‡πå TikTok")
@app_commands.checks.has_permissions(administrator=True)
async def setchannel(interaction: discord.Interaction):
    await interaction.response.defer(ephemeral=True)  # ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤
    set_channel(interaction.guild.id, interaction.channel.id)
    await interaction.followup.send("‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", ephemeral=True)


@bot.tree.command(name="addtiktok", description="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠ TikTok ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°")
@app_commands.describe(username="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ TikTok (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ @)")
async def addtiktok(interaction: discord.Interaction, username: str):
    add_tiktok(interaction.guild.id, username)
    await interaction.response.send_message(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° `{username}` ‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

@bot.tree.command(name="removetiktok", description="‡∏•‡∏ö‡∏ä‡∏∑‡πà‡∏≠ TikTok ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß")
@app_commands.describe(username="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ TikTok ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö")
async def removetiktok(interaction: discord.Interaction, username: str):
    remove_tiktok(interaction.guild.id, username)
    await interaction.response.send_message(f"üóëÔ∏è ‡∏•‡∏ö `{username}` ‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

@bot.tree.command(name="listtiktok", description="‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ TikTok ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°")
async def listtiktok(interaction: discord.Interaction):
    data = get_guild_data(interaction.guild.id)
    users = data.get("tiktok_usernames", [])
    if not users:
        await interaction.response.send_message("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠ TikTok ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö", ephemeral=True)
    else:
        await interaction.response.send_message("üì∫ TikTok ‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°:\n‚Ä¢ " + "\n‚Ä¢ ".join(users), ephemeral=True)


@bot.tree.command(name="testtiktok", description="‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏•‡∏ü‡πå TikTok")
@app_commands.describe(username="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ TikTok")
async def testtiktok(interaction: discord.Interaction, username: str):
    await interaction.response.defer(thinking=True, ephemeral=True)
    try:
        channel = interaction.channel
        is_on, preview_url, stream_title, viewers = await is_live(username)
        if is_on:
            await send_embed(channel, username, preview_url, stream_title, viewers)
            await interaction.followup.send("‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
        else:
            await interaction.followup.send("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÑ‡∏•‡∏ü‡πå")
    except Exception as e:
        await interaction.followup.send(f"‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: `{e}`")






@bot.tree.command(name="setwelcome", description="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö")
@has_any_role_name(["‡∏Ñ‡∏ô‡∏î‡∏π‡πÅ‡∏•", "Moderator", "Admin"])  # ‚úÖ ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
@app_commands.describe(
    channel="‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö (‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡πà‡∏≠‡∏á)",
    message="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö (‡πÉ‡∏™‡πà {user} ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏ó‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤) (‡∏ñ‡πâ‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô)",
    image_url="‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏´‡∏£‡∏∑‡∏≠ GIF (‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ)"
)
async def setwelcome(interaction: discord.Interaction, channel: discord.TextChannel = None, message: str = None, image_url: str = None):
    

    config = load_config()
    data = config.get(str(interaction.guild.id), {})

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÑ‡∏ß‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if "channel_id" not in data:
        # ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
        if not channel:
            await interaction.response.send_message("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Å‡πà‡∏≠‡∏ô ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `/setwelcome` ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å", ephemeral=True)
            return
        data["channel_id"] = channel.id  # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà

    # ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡πâ‡∏≠‡∏á, ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï channel_id
    if channel:
        data["channel_id"] = channel.id  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤

    # ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÅ‡∏Ñ‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ‡∏ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
    if message:
        data["message"] = message  # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
    if image_url:
        data["image_url"] = image_url  # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û

    data["enabled"] = True  # ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö

    config[str(interaction.guild.id)] = data
    save_config(config)

    # ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
    channel = interaction.guild.get_channel(data["channel_id"])  # ‡∏î‡∏∂‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ
    if message and image_url and channel:
        await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà {channel.mention} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà.", ephemeral=True)
    elif message and channel:
        await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà {channel.mention} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà.", ephemeral=True)
    elif image_url and channel:
        await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà {channel.mention} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà.", ephemeral=True)
    else:
        await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà {channel.mention}.", ephemeral=True)





@bot.tree.command(name="previewwelcome", description="‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á")
@has_any_role_name(["‡∏Ñ‡∏ô‡∏î‡∏π‡πÅ‡∏•", "Admin"])  # ‚úÖ ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
@app_commands.describe(user="‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠ mention)")
async def previewwelcome(interaction: discord.Interaction, user: discord.User = None):
    if not user:
        user = interaction.user

    config = load_config()
    data = config.get(str(interaction.guild.id))
    if not data or not data.get("enabled", True):
        await interaction.response.send_message("‚ùå ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", ephemeral=True)
        return

    channel = interaction.guild.get_channel(data["channel_id"])
    if not channel:
        await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ", ephemeral=True)
        return

    # ‡πÅ‡∏à‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
    await interaction.response.defer(ephemeral=True)  # ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ

    # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞ embed
    text = data["embedwelcome_message"].replace("{user}", user.mention)
    title = f"{data.get('embedwelcome_title', 'üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö!')}".replace("{user}", user.mention)

    embed = discord.Embed(
        title=title,
        description=text,
        color=discord.Color.purple()
    )
    embed.set_thumbnail(url=user.display_avatar.url)

    if data.get("image_url"):
        embed.set_image(url=data["embedwelcome_image_url"])

    # ‡πÉ‡∏ä‡πâ pytz ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢
    thailand_tz = pytz.timezone('Asia/Bangkok')
    current_time = datetime.now(thailand_tz).strftime('%H:%M:%S %Y-%m-%d')  # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡πÑ‡∏ó‡∏¢

    embed.set_footer(text=f"‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡∏°‡∏µ {interaction.guild.member_count} ‡∏Ñ‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå üí¨ | ‡πÄ‡∏ß‡∏•‡∏≤: {current_time}")

    # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å embed ‡∏î‡πâ‡∏ß‡∏¢ content
    await interaction.followup.send(
        content=f"üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö {user.mention}!",
        embed=embed,
        ephemeral=True
    )


@bot.tree.command(name="previewout", description="‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á")
@has_any_role_name(["‡∏Ñ‡∏ô‡∏î‡∏π‡πÅ‡∏•", "Admin"])  # ‚úÖ ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
@app_commands.describe(user="‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠ mention)")
async def previewout(interaction: discord.Interaction, user: discord.User = None):
    if not user:
        user = interaction.user

    config = load_config()
    data = config.get(str(interaction.guild.id))
    if not data or not data.get("enabled", True):
        await interaction.response.send_message("‚ùå ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", ephemeral=True)
        return

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ channel_id ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    channel_id = data.get("channel_id")
    if not channel_id:
        await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå", ephemeral=True)
        return

    channel = interaction.guild.get_channel(channel_id)
    if not channel:
        await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ‡πÑ‡∏î‡πâ", ephemeral=True)
        return

    # ‡πÅ‡∏à‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
    await interaction.response.defer(ephemeral=True)  # ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ

    # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞ embed
    text = data.get("goodbye_message", "‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏õ {user}").replace("{user}", user.mention)
    title = f"{data.get('goodbye_title', 'üëã ‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô!')}".replace("{user}", user.mention)

    embed = discord.Embed(
        title=title,
        description=text,
        color=discord.Color.red()
    )
    embed.set_thumbnail(url=user.display_avatar.url)

    if data.get("goodbye_image_url"):
        embed.set_image(url=data["goodbye_image_url"])

    # ‡πÉ‡∏ä‡πâ pytz ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢
    thailand_tz = pytz.timezone('Asia/Bangkok')
    current_time = datetime.now(thailand_tz).strftime('%H:%M:%S %Y-%m-%d')  # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡πÑ‡∏ó‡∏¢

    embed.set_footer(text=f"‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡∏°‡∏µ {interaction.guild.member_count} ‡∏Ñ‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå üí¨ | ‡πÄ‡∏ß‡∏•‡∏≤: {current_time}")

    # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å embed ‡∏î‡πâ‡∏ß‡∏¢ content ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
    await channel.send(
        content=f"üëã ‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô {user.mention}!",
        embed=embed
    )
    await interaction.followup.send(
        "‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True
    )

@bot.tree.command(name="previewroles", description="‡πÅ‡∏™‡∏î‡∏á Embed preview ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏î‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó")
@has_any_role_name(["Admin", "Moderator", "‡∏Ñ‡∏ô‡∏î‡∏π‡πÅ‡∏•"])
async def previewroles(interaction: discord.Interaction):
    config = load_config()
    guild_id = str(interaction.guild.id)

    if guild_id not in config:
        await interaction.response.send_message("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    guild_config = config[guild_id]
    channel_id = guild_config.get("channel_id")
    if not channel_id:
        await interaction.response.send_message("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó", ephemeral=True)
        return

    title = guild_config.get("embedrole_title", "üìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏®‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á")
    color_hex = guild_config.get("embedrole_color", "#2ecc71")

    try:
        color = int(color_hex.replace("#", ""), 16)
    except ValueError:
        color = 0x2ecc71  # fallback ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß

    description_lines = ["¬∞‚ùÄ‚ãÜ.‡≥É‡øî*:ÔΩ•¬∞‚ùÄ‚ãÜ.‡≥É‡øî*:ÔΩ•¬∞‚ùÄ‚ãÜ.‡≥É‡øî*:ÔΩ•¬∞‚ùÄ‚ãÜ.‡≥É‡øî*:ÔΩ•"]
    emojis_to_add = []
    seen_emojis = set()  # ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß

    for emoji, data in guild_config.items():
        # ‡∏Ç‡πâ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà dictionary ‡πÄ‡∏ä‡πà‡∏ô channel_id, message, title
        if isinstance(data, dict):  # ‡πÄ‡∏ä‡πá‡∏Å‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ `data` ‡πÄ‡∏õ‡πá‡∏ô dict
            role_id = data.get("role_id")
            description = data.get("description", "")
            role = interaction.guild.get_role(role_id)

            if role:
                # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏ã‡πâ‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
                if emoji not in seen_emojis:
                    line = f"{emoji} {role.mention} {description} ‚ãÜÔΩ°¬∞‚ú©"
                    description_lines.append(line)
                    emojis_to_add.append(emoji)
                    seen_emojis.add(emoji)  # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß
                else:
                    continue  # ‡∏Ç‡πâ‡∏≤‡∏°‡∏´‡∏≤‡∏Å‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡∏ã‡πâ‡∏≥

    description_lines.append("¬∞‚ùÄ‚ãÜ.‡≥É‡øî*:ÔΩ•¬∞‚ùÄ‚ãÜ.‡≥É‡øî*:ÔΩ•¬∞‚ùÄ‚ãÜ.‡≥É‡øî*:ÔΩ•¬∞‚ùÄ‚ãÜ.‡≥É‡øî*:ÔΩ•")

    embed = discord.Embed(
        title=title,
        description="\n".join(description_lines),
        color=color
    )
    embed.set_image(url="https://media.tenor.com/J_BBejDgP1kAAAAC/ai-eyes.gif")
    embed.set_footer(text=f"‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ {interaction.user.name}", icon_url=interaction.user.avatar.url)

    preview_msg = await interaction.channel.send(embed=embed)

    for emoji in emojis_to_add:
        try:
            await preview_msg.add_reaction(emoji)
        except discord.HTTPException:
            pass  # ‡∏Ç‡πâ‡∏≤‡∏° emoji ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà valid ‡∏´‡∏£‡∏∑‡∏≠ custom ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ

    await interaction.response.send_message("‚úÖ ‡πÅ‡∏™‡∏î‡∏á preview ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", ephemeral=True)





@bot.tree.command(name="setout", description="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå")
@has_any_role_name(["‡∏Ñ‡∏ô‡∏î‡∏π‡πÅ‡∏•", "Moderator", "Admin"])  # ‚úÖ ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
@app_commands.describe(
    channel="‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå (‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡πà‡∏≠‡∏á)",
    message="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå (‡πÉ‡∏™‡πà {user} ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏ó‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å)",
    image_url="‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏´‡∏£‡∏∑‡∏≠ GIF (‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ)"
)
async def setout(interaction: discord.Interaction, channel: discord.TextChannel = None, message: str = None, image_url: str = None):

    

    config = load_config()
    data = config.get(str(interaction.guild.id), {})

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÑ‡∏ß‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if "goodbye_channel_id" not in data:
        # ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
        if not channel:
            await interaction.response.send_message("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏Å‡πà‡∏≠‡∏ô ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `/setout` ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å", ephemeral=True)
            return
        data["goodbye_channel_id"] = channel.id  # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà

    # ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡πâ‡∏≠‡∏á, ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï channel_id
    if channel:
        data["goodbye_channel_id"] = channel.id  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤

    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ‡∏ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
    if message:
        data["goodbye_message"] = message  # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
    if image_url:
        data["goodbye_image_url"] = image_url  # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û

    data["enabled"] = True  # ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå

    config[str(interaction.guild.id)] = data
    save_config(config)

    # ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
    channel = interaction.guild.get_channel(data["goodbye_channel_id"])  # ‡∏î‡∏∂‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ
    if message and image_url and channel:
        await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà {channel.mention} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà.", ephemeral=True)
    elif message and channel:
        await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà {channel.mention} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà.", ephemeral=True)
    elif image_url and channel:
        await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà {channel.mention} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà.", ephemeral=True)
    else:
        await interaction.response.send_message(f"‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà {channel.mention}.", ephemeral=True)



@bot.tree.command(name="embedout", description="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÅ‡∏ö‡∏ö Embed")
@has_any_role_name(["‡∏Ñ‡∏ô‡∏î‡∏π‡πÅ‡∏•", "Moderator", "Admin"])  # ‚úÖ ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
async def embedout(interaction: discord.Interaction):
    config = load_config()
    guild_id = str(interaction.guild.id)
    data = config.get(guild_id, {})

    modal = GoodbyeModal(
        title_val=data.get("goodbye_title", ""),
        description_val=data.get("goodbye_message", ""),
        image_val=data.get("goodbye_image_url", "")
    )
    await interaction.response.send_modal(modal)



@bot.event
async def on_member_remove(member):
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
    config = load_config()
    data = config.get(str(member.guild.id), {})

    # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    channel = discord.utils.get(member.guild.text_channels, name="goodbye")  # ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏™‡πà ID ‡πÅ‡∏ó‡∏ô
    if not channel:
        return

    # ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà {user} ‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    text = data.get("goodbye_message", "‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏õ {user}").replace("{user}", member.mention)

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
    embed = discord.Embed(
        title=data.get("goodbye_title", "üëã ‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô..."),
        description=text,
        color=discord.Color.red()
    )
    embed.set_thumbnail(url=member.display_avatar.url)

    # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if data.get("goodbye_image_url"):
        embed.set_image(url=data["goodbye_image_url"])

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô footer
    thailand_tz = pytz.timezone('Asia/Bangkok')
    current_time = datetime.now(thailand_tz).strftime('%Y-%m-%d %H:%M:%S')

    embed.set_footer(text=f"‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å {member.guild.member_count} ‡∏Ñ‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå üò¢ | ‡πÄ‡∏ß‡∏•‡∏≤: {current_time}")

    # ‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ
    await channel.send(embed=embed)



@bot.tree.command(name="upload_image", description="Upload an image to the server")
async def upload_image(interaction: discord.Interaction):
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå
    button = Button(label="‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û", style=discord.ButtonStyle.primary)

    async def button_callback(interaction: discord.Interaction):
        await interaction.response.send_message("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û!", ephemeral=True)
        # ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏ô‡∏ö‡∏°‡∏≤
        # ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏π‡∏ì‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å on_message ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô

    button.callback = button_callback

    view = View()
    view.add_item(button)

    await interaction.response.send_message("‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û", view=view)



@bot.tree.command(name="embedwelcome", description="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÅ‡∏ö‡∏ö Embed")
@has_any_role_name(["‡∏Ñ‡∏ô‡∏î‡∏π‡πÅ‡∏•", "Moderator", "Admin"])
async def embedwelcome(interaction: discord.Interaction):
    config = load_config()
    guild_id = str(interaction.guild.id)
    data = config.get(guild_id, {})

    modal = WelcomeModal(
        title_val=data.get("embedwelcome_title", ""),
        description_val=data.get("embedwelcome_message", ""),
        image_val=data.get("embedwelcome_image_url", ""),
        color_val=data.get("embedwelcome_color", "#5865F2")
    )
    await interaction.response.send_modal(modal)


@bot.tree.command(name="upload_picture", description="Upload an image to the server")
async def upload_picture(interaction: discord.Interaction):
    # ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û
    button = Button(label="‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û", style=discord.ButtonStyle.primary)

    # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°
    async def button_callback(interaction: discord.Interaction):
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå)
        if not interaction.message.attachments:
            await interaction.response.send_message("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô", ephemeral=True)
            return
        
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏ö‡∏°‡∏≤
        for attachment in interaction.message.attachments:
            if attachment.filename.endswith(('png', 'jpg', 'jpeg', 'gif')):
                # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
                embed = discord.Embed(
                    title="‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏°‡∏≤",
                    description=f"‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å {interaction.user.mention}",
                    color=discord.Color.green()
                )
                embed.set_image(url=attachment.url)  # ‡πÉ‡∏ä‡πâ URL ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏ö‡∏°‡∏≤
                thailand_tz = pytz.timezone('Asia/Bangkok')
                current_time = datetime.now(thailand_tz).strftime('%H:%M:%S %Y-%m-%d')  # ‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡πÑ‡∏ó‡∏¢

                # ‡πÄ‡∏û‡∏¥‡πà‡∏° footer ‡∏•‡∏á‡πÉ‡∏ô Embed ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                embed.set_footer(text=f"‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î: {current_time} | ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: {interaction.guild.name}")

                await interaction.response.send_message(embed=embed)

    # ‡∏ú‡∏π‡∏Å‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö callback
    button.callback = button_callback
    view = View()
    view.add_item(button)

    # ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°
    await interaction.response.send_message("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û", view=view)

def is_admin(interaction: discord.Interaction) -> bool:
    print(f"Checking admin for {interaction.user}")
    return interaction.user.guild_permissions.administrator


@bot.tree.command(name="some_admin_command")
@app_commands.check(is_admin)
async def some_admin_command(interaction: discord.Interaction):
    await interaction.response.send_message("‚úÖ This is an admin-only command.", ephemeral=True)

@some_admin_command.error
async def some_admin_command_error(interaction: discord.Interaction, error):
    if isinstance(error, app_commands.CheckFailure):
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)


server_on()   

bot.run(os.getenv('TOKEN'))
